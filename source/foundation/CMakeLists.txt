file(GLOB source_files "*.h*" "../*.h*" "*.c*")
file(GLOB_RECURSE bp_node_source_files "blueprint_library/*.h*" "blueprint_library/*.c*")
set(source_files "${source_files};${bp_node_source_files}")
add_library(flame_foundation SHARED ${source_files})
list(FILTER source_files INCLUDE REGEX ".*foundation[.]cpp$")
set_source_files_properties(${source_files} PROPERTIES COMPILE_FLAGS "/bigobj")
set_target_properties(flame_foundation PROPERTIES FOLDER "flame")
target_compile_definitions(flame_foundation PRIVATE FLAME_FOUNDATION_MODULE)
target_include_directories(flame_foundation PUBLIC "${CMAKE_SOURCE_DIR}/include")
target_link_libraries(flame_foundation PRIVATE ws2_32.lib)
target_link_libraries(flame_foundation PRIVATE imagehlp.lib)
target_link_libraries(flame_foundation PUBLIC glm::glm-header-only)
target_link_libraries(flame_foundation PUBLIC pugixml::shared)
target_link_libraries(flame_foundation PUBLIC nlohmann_json::nlohmann_json)
target_include_directories(flame_foundation PUBLIC "${CPPCODEC_INCLUDE_DIRS}")
target_include_directories(flame_foundation PRIVATE "${Stb_INCLUDE_DIR}")
target_include_directories(flame_foundation PRIVATE "${EXPRTK_INCLUDE_DIRS}")

if(USE_SHA1)
	target_compile_definitions(flame_foundation PRIVATE USE_SHA1)
	target_include_directories(flame_foundation PRIVATE "${SHA1_INCLUDE_DIR}")
else()
	message(STATUS "foundation module: SHA1 is required for websocket")
endif()

if(USE_CURL)
	target_compile_definitions(flame_foundation PRIVATE USE_CURL)
	target_link_libraries(flame_foundation PRIVATE CURL::libcurl_shared)
else()
	message(STATUS "foundation module: curl is required for html downloading")
endif()

if(USE_MYSQL)
	target_compile_definitions(flame_foundation PRIVATE USE_MYSQL)
	target_include_directories(flame_foundation PRIVATE "${MYSQL_INCLUDE_DIR}")
	target_link_libraries(flame_foundation PRIVATE "${MYSQL_LIB_PATH}")
	add_custom_command(TARGET flame_foundation POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy_if_different "${MYSQL_DLL_PATH}" $(TargetDir))
else()
	message(STATUS "foundation module: MYSQL is required for database connection")
endif()

file(GLOB headers "../*.h*")
list(FILTER headers EXCLUDE REGEX ".*_private[.]h$")
file(MAKE_DIRECTORY "${CMAKE_SOURCE_DIR}/include/flame")
add_custom_command(TARGET flame_foundation PRE_BUILD COMMAND ${CMAKE_COMMAND} -E make_directory "${CMAKE_SOURCE_DIR}/include/flame")
add_custom_command(TARGET flame_foundation PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_if_different ${headers} "${CMAKE_SOURCE_DIR}/include/flame")

file(GLOB headers "*.h*")
list(FILTER headers EXCLUDE REGEX ".*_private[.]h$")
file(MAKE_DIRECTORY "${CMAKE_SOURCE_DIR}/include/flame/foundation")
add_custom_command(TARGET flame_foundation PRE_BUILD COMMAND ${CMAKE_COMMAND} -E make_directory "${CMAKE_SOURCE_DIR}/include/flame/foundation")
add_custom_command(TARGET flame_foundation PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy_if_different ${headers} "${CMAKE_SOURCE_DIR}/include/flame/foundation")
